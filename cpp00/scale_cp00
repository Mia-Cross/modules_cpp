######################################
EX_00
######################################

This exercise is basically a to_upper program with a specific behavior when run without any parameter.
  Accept C approach (loop/check) and C++ approach (strings/upper).

######################################
EX_01
######################################

Some error handling is required in this exercise but behaviors are not specified in the subject.
Rate the EXIT command as described in the subject.
The attributes of the class Contact should be private and the class
should expose the corresponding accessors.
Also check that anything that should always be used inside a class (not only in the Contact class)
is private and that anything that can be used outside a class is public. Beginners tend
to put everything in public, that's what you want to spot here.

The code must include a Contact class, or whatever name the student
used.
This class must contain attributes for the different fields.

The program must present a read/eval loop at some point: reading
the input, evaluating it, then loop until an EXIT command appears in input.

Rate the ADD command as described in the subject. The field names
are not relevant, nor the number of fields as long as it respects the spirit
of the exercise.

Rate the SEARCH command as described in the subject. A minor divergence in the
expected formating is not relevant. The aim of this part is to use C++ iomanips
and that's what you should focus on.

######################################
EX_02
######################################

This exercise is pretty straight forward. Either Account.class.cpp works, either it does not.
Compare the program's output and the provided log. Any difference apart from the timestamp 
is a hint that something went horribly wrong.
